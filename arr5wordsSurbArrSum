.Define an array named ARRAY_FIVE of 5 words. Initialize every word in ARRAY_FIVE with decimal
.2. Now, write a subroutine which adds up all the numbers in ARRAY_FIVE and stores at a memory
.word named ARRAY_SUM. You must use the JSUB and RSUB instructions at appropriate places.


INIT_ARRAY START 100      .Load the program at loc 100
LDA TWO                  .A <-- (TWO)
STA VALUE2ST              .VALUE2ST <-- (A)
LDA ZERO                  .A <-- (ZERO)
STA INDEX                 .INDEX <-- (A)
LDX INDEX                 .X <-- (INDEX)
LOOP_START LDA VALUE2ST   .A <-- (VALUE2ST)
ADD TWO                   .A <-- (A) + 2
STA VALUE2ST              .VALUE2ST <-- (A)
LDX INDEX                 .X <-- (INDEX)
STA SRC_ARRAY,X           .SRC_ARRAY + X <-- (A); same as writing SRC_ARRAY[X] <-- (A)
LDA INDEX                 .A <-- (INDEX)
ADD SIX                 .A <-- (A) + 3
STA INDEX                 .INDEX <-- (A)
COMP THIRTY               .(A) : (THIRTY,THIRTY+1,THIRTY+2) and set CC accordingly
JLT LOOP_START            .if CC is <, then jump to LOOP_START
VALUE2ST RESW 1           .Reserve a word and call it VALUE2ST
INDEX RESW 1              .Reserve a word and call it INDEX
SRC_ARRAY RESW 5      .Reserve and array of 5 words and call it SRC_ARRAY
ZERO WORD 0               .Define a word constant initialized to 0
TWO WORD 2
ONE WORD 1                .Define a word constant initialized to 1
SIX WORD 6              .Define a word constant initialized to 3
THIRTY WORD 30            .Define a word constant initialized to 30
END INIT_ARRAY            .End of program
